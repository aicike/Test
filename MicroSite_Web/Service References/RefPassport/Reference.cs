//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MicroSite_Web.RefPassport {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RefPassport.ITokenService")]
    public interface ITokenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenService/TokenGetCredence", ReplyAction="http://tempuri.org/ITokenService/TokenGetCredenceResponse")]
        object TokenGetCredence(string tokenValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenService/ClearToken", ReplyAction="http://tempuri.org/ITokenService/ClearTokenResponse")]
        void ClearToken(string tokenValue);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITokenServiceChannel : MicroSite_Web.RefPassport.ITokenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TokenServiceClient : System.ServiceModel.ClientBase<MicroSite_Web.RefPassport.ITokenService>, MicroSite_Web.RefPassport.ITokenService {
        
        public TokenServiceClient() {
        }
        
        public TokenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TokenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object TokenGetCredence(string tokenValue) {
            return base.Channel.TokenGetCredence(tokenValue);
        }
        
        public void ClearToken(string tokenValue) {
            base.Channel.ClearToken(tokenValue);
        }
    }
}
