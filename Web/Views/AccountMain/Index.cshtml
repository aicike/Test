@{
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    ViewBag.Menu2 = Poco.SystemConst.Menu.AccountMain;
    ViewBag.Menu3 = Poco.SystemConst.Menu.AccountMain;
}
@model PagedList<Poco.AccountMain>
<div class="title">
    @Html.Partial("SitePath")</div>
<div class="body">
    <div class="option">@Html.ActionLink("添加", "Add", "AccountMain", new { HostName = ViewBag.HostName }, null, true)</div>
    <table class="tableList" cellpadding="0" cellspacing="0">
        <tr>
            <th>
                Logo
            </th>
            <th>
                名称
            </th>
            <th>
                电话
            </th>
            <th>
                状态
            </th>
            <th style="width: 200px;">
                操作
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img id="imgLogo" style="max-width:80px;max-height:80px;" src="@Url.Content(@item.LogoImageThumbnailPath ?? "")" />
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.SalePhone
                </td>
                <td class="operation">
                    @if (@item.AccountStatus.Token == Poco.Enum.EnumAccountStatus.Disabled.ToString())
                    {
                        @Ajax.ActionLink(@item.AccountStatus.Value, "SetAccountMainStatus", "AccountMain", new
                        {
                            accountMainID = item.ID,
                            status = Poco.Enum.EnumAccountStatus.Enabled.ToString()
                        },
                        new AjaxOptions()
                        {
                            UpdateTargetId = "alert",
                            OnBegin = "return AppDelete('确定要启用?','" + Url.Action("SetAccountMainStatus", "AccountMain",
                                new
                                {
                                    accountMainID = item.ID,
                                    status = Poco.Enum.EnumAccountStatus.Enabled.ToString()
                                }) + "',null)"
                        }, true, true)
                    }
                    else
                    {
                        @Ajax.ActionLink(@item.AccountStatus.Value, "SetAccountMainStatus", "AccountMain", new
                        {
                            accountMainID = item.ID,
                            status = Poco.Enum.EnumAccountStatus.Disabled.ToString()
                        },
                        new AjaxOptions()
                        {
                            UpdateTargetId = "alert",
                            OnBegin = "return AppDelete('确定要禁用?','" + Url.Action("SetAccountMainStatus", "AccountMain",
                                new
                                {
                                    accountMainID = item.ID,
                                    status = Poco.Enum.EnumAccountStatus.Disabled.ToString()
                                }) + "',null)"
                        }, true, true)
                    }
                </td>
                <td class="operation" style="line-height: 20px">
                    @Html.ActionLink("修改", "Edit", "AccountMain", new { id = item.ID }, null, true)
                    @Ajax.ActionLink("删除", "Delete", "AccountMain", new { id = item.ID }, new AjaxOptions() { UpdateTargetId = "alert", OnBegin = "return AppDelete('确定删除?','" + Url.Action("Delete", "AccountMain", new { id = item.ID }) + "',null)" }, true)
                    <br />
                    @Html.ActionLink("角色管理", "Role", "AccountMain", new { accountMainID = item.ID }, null, true)
                    @Html.ActionLink("账号管理", "Account", "AccountMain", new { accountMainID = item.ID }, null, true)
                    @Html.ActionLink("报表管理", "Report", "AccountMain", new { accountMainID = item.ID }, null, true)
                </td>
            </tr>
        }
    </table>
    <input type="button" value="返回"  class="button" onclick="location.href='@Url.Action("Index", "HousesMange", new { HostName = ViewBag.HostName })'" />
    <div class="pages">
        @Html.Pager(Model, new PagerOptions
   {
       PageIndexParameterName = "ID",
       CurrentPagerItemWrapperFormatString = "<span class=\"pagenum_selected\"><a>{0}</a></span>",
       NumericPagerItemWrapperFormatString = "<span class=\"pagenum\">{0}</span>",
       NavigationPagerItemWrapperFormatString = "<span class=\"pagenum\">{0}</span>",
       CssClass = "manage_pages pages",
       SeparatorHtml = "&nbsp;",
       AutoHide = false,
       PageIndexOutOfRangeErrorMessage = "Page index out of range.",
       ShowFirstLast = false
   })
    </div>
</div>
