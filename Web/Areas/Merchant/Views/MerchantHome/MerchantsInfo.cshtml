@{
    Layout = "~/Views/Shared/_LayoutMerchant.cshtml";
    ViewBag.Menu = 13;
}
@model Poco.Merchant
@section head{
    <script src="@Url.Content("/ueditor/ueditor.config.js")" type="text/javascript"></script>
    <script src="@Url.Content("/ueditor/ueditor.all.js")" type="text/javascript"></script>
    <script>
        $.ajaxSetup({
            async: false
        });
        $(function () {
            window.UEDITOR_HOME_URL = "/ueditor/";
            //实例化编辑器
            var options = {
                initialFrameWidth: '100%',
                initialFrameHeight: 300,
                imageUrl: UEDITOR_HOME_URL + "net/imageUp_Merchant.ashx",
                imagePath: "",
                imageManagerUrl: UEDITOR_HOME_URL + "net/imageManager_LibraryImageText.ashx",
                imageManagerPath: "",
                initialContent: ""
            };

            var ue = UE.getEditor('editor', options);

            $("#btnUpload").click(function () {
                $("#LogoImagePathFile").click();
            });

            $("#LogoImagePathFile").change(function () {
                var fileName = $("#LogoImagePathFile").val();
                $("#LogoImagePath").val(fileName);
                var suffix = fileName.substring(fileName.lastIndexOf('.')).toLowerCase();
                $("span[data-valmsg-for='LogoImagePath']").empty().attr("class", "field-validation-valid");
                switch (suffix) {
                    case ".jpg":
                    case ".jpeg":
                    case ".png":
                    case ".gif":
                    case ".bmp":
                        break;
                    default:
                        $("span[data-valmsg-for='LogoImagePath']").text("支持下列图片格式：.jpg|.jpeg|.png|.gif|.bmp").attr("class", "field-validation-error");
                        break;
                }
                var input = this;
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("#imgLogo").attr('src', e.target.result);
                    };
                    reader.readAsDataURL(input.files[0]);
                }
                return false;
            });

            $("#LoginPwd,#LoginPwdPage").val('@Common.DESEncrypt.Decrypt(Model.LoginPwd)');

            $("#btnSubmit").click(function () {
                checkEmail();
                if (EmailRight == false) {
                    EmailRight = true;
                    return false;
                }
                checkPhone();
                if (PhoneRight == false) {
                    PhoneRight = true;
                    return false;
                }

                if (ue.getContent().length == 0) {
                    JAlert({
                        Message: "简介不能为空！",
                        DialogType: "Ok",
                        BtnOk: "确定"
                    });
                    return false;
                }
                return true;
            });

            //唯一验证
            $("#Email").blur(function () {
                checkEmail();
            });

            //唯一验证 电话
            $("#Phone").blur(function () {
                checkPhone();
            });

            var error = "@ViewBag.Error";
            if (error == "1") {
                JMessage("保存成功");
            }
            else if (error == "2") {
                JMessage("保存失败，请稍后再试！", true);
            }



        });
        var PhoneRight = false;
        var EmailRight = false;
        function checkEmail() {
            var values = $("#Email").val();
            if (values != "" && values != undefined) {
                var YZUrl = '@Url.Action("ChickUniqueEmail", "MerchantHome", new { Area = "", HostName = "" })';
                $.post(YZUrl, { email: values }, function (result) {
                    if (result == "True") {
                        EmailRight = true;
                    }
                    else {
                        JAlert({
                            Message: "该邮箱已存在！请换个邮箱试试！",
                            DialogType: "Ok",
                            BtnOk: "确定"
                        });
                        EmailRight = false;
                    }
                });
            }
        }

        function checkPhone() {
            var values = $("#Phone").val();

            if (values != "" && values != undefined) {
                var YZUrl = '@Url.Action("ChickUniquePhone", "MerchantHome", new { Area = "", HostName = "" })';
                $.post(YZUrl, { phone: values }, function (result) {

                    if (result == "True") {
                        PhoneRight = true;
                    }
                    else {
                        JAlert({
                            Message: "该电话已存在！请换个电话试试！",
                            DialogType: "Ok",
                            BtnOk: "确定"
                        });

                        PhoneRight = false;
                    }
                });
            }
        }
    </script>
}
<div class="title">
    商户基本信息
</div>
<div class="body">
    @using (Html.BeginForm("UPDMerchantsInfo", "MerchantHome", new { HostName = @ViewBag.HostName }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        
        <fieldset style="font-size: 14px">
            <legend>基本信息</legend>
            <table style="width: 100%;">
                <tr>
                    <td class="tdTitle" style="width: 150px">
                        <span class="Identification">*</span> Logo：
                    </td>
                    <td class="tdField">
                        @if (!string.IsNullOrEmpty(Model.LogoImagePath))
                        {
                            <img id="imgLogo" src="@Url.Content(Model.LogoImagePath)" style="max-width: 80px; max-height: 80px; float: left" />
                        }
                        else
                        {
                            <img id="imgLogo" style="max-width: 80px; max-height: 80px; float: left" />
                        }
                        <input type="file" id="LogoImagePathFile" name="LogoImagePathFile" style="display: none" />
                        &nbsp;&nbsp;<input type="button" class="button" value="上传" id="btnUpload" />
                        @Html.TextBoxFor(a => a.LogoImagePath, new { style = "width:0px;visibility:hidden" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(a => a.LogoImagePath)
                        @Html.HiddenFor(a => a.ID)
                        @Html.HiddenFor(a => a.LoginPwd)
                    </td>
                </tr>
                <tr>
                    <td class="tdTitle" style="width: 150px">
                        <span class="Identification">*</span> 商户名称：
                    </td>
                    <td class="tdField">@Html.TextBoxFor(a => a.Name, new { style = "width:300px" })
                    </td>
                    <td>@Html.ValidationMessageFor(a => a.Name)
                    </td>
                </tr>
                <tr>
                    <td class="tdTitle" style="width: 150px">
                        <span class="Identification">*</span> 商户电话(登陆)：
                    </td>
                    <td class="tdField">@Html.TextBoxFor(a => a.Phone, new { style = "width:300px" })
                    </td>
                    <td>@Html.ValidationMessageFor(a => a.Phone)
                    </td>
                </tr>
                <tr>
                    <td class="tdTitle">
                        <span class="Identification">*</span> 邮箱：
                    </td>
                    <td class="tdField">@Html.TextBoxFor(a => a.Email, new { style = "width:300px" })
                    </td>
                    <td>@Html.ValidationMessageFor(a => a.Email)
                    </td>
                </tr>
                <tr>
                    <td class="tdTitle">
                        <span class="Identification">*</span> 商户地址：
                    </td>
                    <td class="tdField">@Html.TextBoxFor(a => a.Address, new { style = "width:300px" })
                    </td>
                    <td>@Html.ValidationMessageFor(a => a.Address)
                    </td>
                </tr>
                <tr>
                    <td class="tdTitle">
                        <span class="Identification">*</span> 密码：
                    </td>
                    <td class="tdField">@Html.PasswordFor(a => a.LoginPwd, new { style = "width:300px" })
                    </td>
                    <td>@Html.ValidationMessageFor(a => a.LoginPwd)
                    </td>
                </tr>
                <tr>
                    <td class="tdTitle">
                        <span class="Identification">*</span> 确认密码：
                    </td>
                    <td class="tdField">@Html.PasswordFor(a => a.LoginPwdPage, new { style = "width:300px" })
                    </td>
                    <td>@Html.ValidationMessageFor(a => a.LoginPwdPage)
                    </td>
                </tr>
                <tr style="height: 300px">
                    <td class="tdTitle" valign="top">
                        <span class="Identification">*</span> 商户简介：
                    </td>
                    <td class="tdField" colspan="2">
                        <script type="text/plain" id="editor" height="300px" name="Introduction">
                        @if (!string.IsNullOrEmpty(Model.Introduction))
                        {
                            @Html.Raw(Model.Introduction)
                        }
                        </script>
                    </td>
                </tr>
            </table>
        </fieldset>
        <input type="submit" id="btnSubmit" value="保存" class="button" />
    }
</div>
